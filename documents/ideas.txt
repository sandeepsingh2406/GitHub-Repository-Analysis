** Analysis, pattern finding

Done:
Distribution of languages in popular repositories (langugageDistribution.jpg)
6] Graph of number of projects per language in the given year/month: done. Call getCollectionCount
10] cluster users according to number of users and show count of each cluster (number of users having number of repos in that range), show pie chart

(Web Service and screenshot) most active users based on repo count, 
                            most popular users based on follower count
                            most popular repositories based on watchers count and forks count (total sum, or partial sum or some formula)



To do:
Hot projects: projects with smaill duration but popular
** Advanced machine learning / data mining tasks
11] give recommendation to show similar repositories based on subscription

recoomend user1  viewin a repository 2: other repo of owner of repo 2
recoomendation: ..repo can be clustered according to languages, size, popularity(+-5)

open issues vs watchers count vs forks count
user's subscription count vs public repo



# Query to get ownerId, repoId and popularity
SELECT ar.ownerID, ar.repoID, (ar.forksCount + ar.watchersCount) as popularity
FROM alllanguagerepotable as ar
WHERE ar.repoID IN ( SELECT toprepolanguagetable.repoID FROM toprepolanguagetable WHERE LANGUAGE='java' )
ORDER by (ar.forksCount + ar.watchersCount) DESC



https://www.igvita.com/slides/2012/bigquery-github-strata.pdf

https://developer.github.com/v3/search/#rate-limit



https://api.github.com/search/repositories?q=language:go+created:%3E2016-01-01+size:%3E10000&per_page=100&page=19
{
  "message": "Only the first 1000 search results are available",
  "documentation_url": "https://developer.github.com/v3/search/"
}




		select distinct(t.repoName)
		 from toprepolanguagetable t, alllanguagerepotable a,(select top.repoName as repoName,top.language as language,(ar.forksCount + ar.watchersCount) as popularity, ar.repoSize as repoSize 
		from toprepolanguagetable top, alllanguagerepotable as ar 
		where top.repoName = ar.repoName and ar.repoName="react-native-firestack") userRepo
		where t.repoName=a.repoName
		and t.repoName!=userRepo.repoName
		and userRepo.language=t.language
		and a.repoSize>= 0.75*userRepo.repoSize
		and a.repoSize<= 1.25*userRepo.repoSize
		and (a.forksCount + a.watchersCount)>= 0.75*userRepo.popularity
		and (a.forksCount + a.watchersCount)<= 1.25*userRepo.popularity
		limit 5
